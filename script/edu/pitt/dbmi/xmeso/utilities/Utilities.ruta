PACKAGE edu.pitt.dbmi.xmeso.utilities;

SCRIPT edu.pitt.dbmi.xmeso.model.Model;

// A block declaration always starts with the keyword “BLOCK”, followed by the identifier of the block within parentheses.
BLOCK(CleanBeneathXmeso) Document{} {
    // The rule element contains one condition and one action, both surrounded by curly parentheses. 
    // In order to distinguish conditions from actions they are separated by "->".
    FloatNum{PARTOF(Document)->UNMARK(FloatNum)};
    UOM{PARTOF(Document)->UNMARK(UOM)};
    PartIndicator{PARTOF(Document)->UNMARK(PartIndicator)};
}

// The RETAINTYPE action retains the given types. This means that they can be matched by rules.
// CAP - word only containing capitalized letters
// COLON - colon
// COMMA - comma
// CW - word starting with one capitalized letter
// PERIOD - period
// SPACE -spaces
// SPECIAL - all other tokens and symbols
// SW - lower case word
BLOCK(CleanBeneathRutas) Document{->RETAINTYPE(CAP,COLON,COMMA,CW,PERIOD,SPACE,SPECIAL,SW)} {
    // The UNMARK action removes the annotation of the given type overlapping the matched annotation
    CAP{PARTOF(Document)->UNMARK(CAP)};
    COLON{PARTOF(Document)->UNMARK(COLON)};
    COMMA{PARTOF(Document)->UNMARK(COMMA)};
    CW{PARTOF(Document)->UNMARK(CW)};
    // Why NUM is not in RETAINTYPE()?
    NUM{PARTOF(Document)->UNMARK(NUM)};
    PERIOD{PARTOF(Document)->UNMARK(PERIOD)};
    SPACE{PARTOF(Document)->UNMARK(SPACE)};  
    SPECIAL{PARTOF(Document)->UNMARK(SPECIAL)};
    SW{PARTOF(Document)->UNMARK(SW)};
}
