PACKAGE edu.pitt.dbmi.xmeso.avpairs;

SCRIPT edu.pitt.dbmi.xmeso.model.Model;

//
// DetectLymphNodesExamined
//
// A mention of lymph nodes in an important section
// triggers a yes to Lymph Nodes Examined slot
//
BLOCK(DetectLymphNodesExamined) Document{} {
    // First rule
    W{REGEXP("LYMPH|Lymph|lymph")} 
    // Second rule
    W{REGEXP("NODES?|Nodes?|nodes?") -> 
         // The CREATE action is similar to the MARK action. 
         // It also annotates the matched text fragments with a type annotation (XmesoLymphNodesExamined), 
         // but additionally assigns values to a chosen subset of the type's feature elements (snomedCode and codedPenalty).
         // In this case, the two numerical expressions state that 
         // the matched text of the first and the second rule elements are joined to 
         // create the boundaries of the new annotation (XmesoLymphNodesExamined).
         CREATE(XmesoLymphNodesExamined, 1, 2, "snomedCode" = "PATH|LYMPH_EXAMINED:YES", "codedPenalty" = 1)
    };
}
 
  
//
// DetectSpecialStainProfile
// http://www.miracalifesciences.com/publication/exactly-what-are-immunohistochemical-stains/
//
// A mention of special or immunohistochemical stain in
// an important section triggers a yes response to 
// the use of special stains.  If this rule becomes spurious
// it might be improved by looking for actual stain mentions
//  
BLOCK(DetectSpecialStainProfile) Document{} {
    W{REGEXP("(?i)SPECIAL|IMMUNOHISTOCHEMICAL")} 
    W{REGEXP("(?i)STAINS?") -> 
         CREATE(XmesoSpecialStain, 1, 2, "snomedCode" = "PATH|SPECIAL_STAIN:YES", "codedPenalty" = 1)
    };
}
