PACKAGE edu.pitt.dbmi.xmeso.segmentor;

SCRIPT edu.pitt.dbmi.xmeso.typesystem.Typesystem;

//
// Section Header Discovery
// 
WORDTABLE sectionHeaderTable = 'ruta_section_headers.csv';
BLOCK(SectionHeaderDetector) Document{} {
     Document{->MARKTABLE(SectionHeader, 1,
         sectionHeaderTable, true, 4, ".,-", 1, "name" = 2)};
     SectionHeader  {-> SHIFT(SectionHeader,1,2)} COLON{-PARTOF(SectionHeader)};
     INT subsumedSectionHeaders = 0;
     SectionHeader {COUNT(SectionHeader,1,10,subsumedSectionHeaders),
                    subsumedSectionHeaders > 1
                    ->UNMARK(SectionHeader), ASSIGN(subsumedSectionHeaders,0)};
}
BLOCK(SectionHeaderFilter) Document{->ADDRETAINTYPE(BREAK,SectionHeader)} {
    ANY{-PARTOF(BREAK)} @SectionHeader {-> UNMARK(SectionHeader)};
}
BLOCK(EndOfDocumentDetector) Document{} {
    Document{->MARKLAST(EndOfDocument)};
    SPECIAL {REGEXP("\\$"), PARTOF(EndOfDocument) -> UNMARK(SPECIAL)};
}

BLOCK(EndOfSectionDetector) Document{} {
   Document{->RETAINTYPE(BREAK)};
   BREAK @SectionHeader { -> MARK(EndOfSection, 1)};
   EndOfSection { -AFTER(SectionHeader) -> UNMARK(EndOfSection)};
}

BLOCK(SectionDetector) Document{} {
   STRING sectionName;
   SectionHeader{ -> GETFEATURE("name",sectionName)} 
   (ANY|FloatNum|UOM|XmesoSize)+? {-PARTOF(Section)}
   (EndOfSection | EndOfDocument) 
      { -> CREATE(Section, 2, "name" = sectionName)};
}

BLOCK(WholeNumberListDetector) Document{} {
    INT parsedNumber;
    INTLIST parsedNumbers;
    Document{-> FILTERTYPE(BREAK, COMMA)};
    NUM[3,5] { -PARTOF(WholeNumberList) -> MARK(WholeNumberList)};
 //   (NUM)[2,10]? {-> MARK(WholeNumberList, 2, 3), CLEAR(parsedNumbers)} COLON?;
 //   (NUM{PARSE(parsedNumber) -> ADD(parsedNumbers, parsedNumber), LOG("Added a number")})[2,10]?
//    (COLON{-> MARK(WholeNumberList, 2, 3), CLEAR(parsedNumbers)})?;
}

BLOCK(PartHeaderAnnotator) Document{} {
    INT currentPartNumber = 0;
    Document {-> RETAINTYPE(BREAK)};
    BREAK 
    W{REGEXP("PARTS?|Parts?") -> MARK(PartIndicator)}
    NUM {PARSE(currentPartNumber),
         -PARTOF(PartHeader) -> CREATE(PartHeader, 2, 3, 
                 "sectionName" = "UNASSIGNED",
                 "partNumber" = currentPartNumber)};
    PartHeader  {-> SHIFT(PartHeader,1,2)} COLON{-PARTOF(PartHeader)};
}

BLOCK(PartHeaderSectionNameAssigner) Section{} {
    STRING currentSectionName;
    Section{ -> GETFEATURE("name", currentSectionName)};
    PartHeader.sectionName == "UNASSIGNED" { PARTOF(Section) ->  SETFEATURE("sectionName", currentSectionName) };
}

BLOCK(PartDetector) Document{->ADDRETAINTYPE(SPACE,BREAK)} {
    STRING sectionNameVar;
    INT partNumVar;  
    PartHeader {->
                    GETFEATURE("partNumber", partNumVar), 
                    GETFEATURE("sectionName", sectionNameVar)} 
    ((BREAK|SPACE|ANY|FloatNum|XmesoSize|UOM){-PARTOF(Part)})+?
    (PartHeader | EndOfSection | EndOfDocument) 
       {->  CREATE(Part, 2,
                   "sectionName" = sectionNameVar,
                   "partNumber" = partNumVar)};
    Part{-> TRIM(BREAK,SPACE)};
}

