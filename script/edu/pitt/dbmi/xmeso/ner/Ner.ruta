PACKAGE edu.pitt.dbmi.xmeso.ner;

SCRIPT edu.pitt.dbmi.xmeso.model.Model;

// NER stands for Named Entity Recognition
WORDTABLE histologicalTypeTable = 'ner/histological_type.csv';
WORDTABLE immunohistochemicalProfileTable = 'ner/immunohistochemical_profile.csv';
WORDTABLE tumorSiteTable = 'ner/site_of_tumor.csv';
WORDTABLE surgicalProcedureTable = 'ner/surgical_procedure.csv';
WORDTABLE tumorConfigurationTable = 'ner/tumor_configuration.csv';
WORDTABLE tumorDifferentiationTable = 'ner/tumor_differentiation.csv';
WORDTABLE ultrastructuralFindingsTable = 'ner/ultrastructural_findings.csv';

// The MARKTABLE action creates annotations of the given type (first parameter), 
// if an element of the given column (second parameter) of a passed table (third parameter) 
// occures within the window of the matched annotation. 
// Thereby, the created annotation does not cover the whole matched annotation. 
// Instead, it only covers the text of the found occurrence. 
// Optionally the MARKTABLE action is able to assign entries of the given table to features of the created annotation.
// The case of the word is ignored if the length of the word exceeds 0
// Additionally, the char " " and  "-" are ignored, but but maximally 10 of them.
BLOCK(NameEntityHistologicalType) Document {} { 
    // We don't really need the semanticType column in each dictionary file since we have each variable in its own file
    Document{->
        MARKTABLE(XmesoHistologicalType, 1, histologicalTypeTable, true, 0, " -", 10, "coveredText" = 1, "snomedCode" = 2, "semanticType" = 3, "codedPenalty" = 4)
    };
}

BLOCK(NameEntityImmunohistochemicalProfile) Document {} { 
    Document{->
        MARKTABLE(XmesoImmunoHistochemicalProfile, 1, immunohistochemicalProfileTable, true, 0, " -", 10, "coveredText" = 1, "snomedCode" = 2, "semanticType" = 3, "codedPenalty" = 4)
    };
}

BLOCK(NameEntityTumorSite) Document {} { 
    Document{->
        MARKTABLE(XmesoTumorSite, 1, tumorSiteTable, true, 0, " -", 10, "coveredText" = 1, "snomedCode" = 2, "semanticType" = 3, "codedPenalty" = 4)
    };
}

BLOCK(NameEntitySurgicalProcedure) Document {} { 
    Document{->
        MARKTABLE(XmesoSurgicalProcedure, 1, surgicalProcedureTable, true, 0, " -", 10, "coveredText" = 1, "snomedCode" = 2, "semanticType" = 3, "codedPenalty" = 4)
    };
}

BLOCK(NameEntityTumorConfiguration) Document {} { 
    Document{->
        MARKTABLE(XmesoTumorConfiguration, 1, tumorConfigurationTable, true, 0, " -", 10, "coveredText" = 1, "snomedCode" = 2, "semanticType" = 3, "codedPenalty" = 4)
    };
}

BLOCK(NameEntityTumorDifferentiation) Document {} { 
    Document{->
        MARKTABLE(XmesoTumorDifferentiation, 1, tumorDifferentiationTable, true, 0, " -", 10, "coveredText" = 1, "snomedCode" = 2, "semanticType" = 3, "codedPenalty" = 4)
    };
}

BLOCK(NameEntityUltrastructuralFindings) Document {} { 
    Document{->
        MARKTABLE(XmesoUltrastructuralFindings, 1, ultrastructuralFindingsTable, true, 0, " -", 10, "coveredText" = 1, "snomedCode" = 2, "semanticType" = 3, "codedPenalty" = 4)
    };
}

// This doesn't seem to be used?
//
// AssignSectionsAndPartsToNamedEntities
//
//   All Named Entities inherit features from their
// enclosing section and part.
//
STRING sectionNameVar = "Undefined";
INT sectionLevelVar = -1;
INT partNumberVar = -1;
BLOCK(AssignSectionsAndPartsToNamedEntities) Part{->
    // The GETFEATURE action stores the value of the matched annotation's feature (first parameter) 
    // in the given variable (second parameter).
    GETFEATURE("sectionName", sectionNameVar),
    GETFEATURE("sectionLevel", sectionLevelVar),
    GETFEATURE("partNumber", partNumberVar)} {XmesoNamedEntity{-> 
        // The SETFEATURE action sets the value of a feature of the matched complex structure.
        SETFEATURE("sectionName", sectionNameVar),
        SETFEATURE("sectionLevel", sectionLevelVar), 
        SETFEATURE("partNumber", partNumberVar)
    };
}
            

