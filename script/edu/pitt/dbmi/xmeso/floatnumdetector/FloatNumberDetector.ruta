PACKAGE edu.pitt.dbmi.xmeso.floatnumdetector;

DECLARE FloatNum;
DECLARE Size;

BLOCK(DetectFloatNum) Document{} {
  NUM PERIOD NUM {-> MARK(FloatNum,1,3), UNMARK(ANY)};
}

BLOCK(DetectSize) Document{} { 
    FloatNum W{REGEXP("x")} FloatNum  W{REGEXP("x")} FloatNum{-> MARK(Size,1,5)};
}


DECLARE StageT;
DECLARE StageN;
DECLARE StageM;
DECLARE StageTNM;

DECLARE Annotation SizeThreeDimensional(
    FLOAT maxDim,
    FLOAT dimOne,   
    FLOAT dimTwo, 
    FLOAT dimThree,
    STRING uom);
DECLARE UOM;

"[pc]?(Tis|T[0-4])\\s*(N[0-4])\\s*(M[0xX])" -> StageTNM, 1 = StageT, 2 = StageN, 3 = StageM;

//"\\d+\\.\\d{1,3}" -> FloatNum;


FLOAT dimensionOne;
FLOAT dimensionTwo;
FLOAT dimensionThree;
FLOAT dimensionMaximum = -1.0;
STRING unitOfMeasure;

BLOCK(SizeDetection) Document{} {
   "cm|CM|mm|MM" -> UOM;
   FloatNum {PARSE(dimensionOne)} 
   W{REGEXP("x")} 
   FloatNum {PARSE(dimensionTwo)} 
   W{REGEXP("x")} 
   FloatNum {PARSE(dimensionThree)} 
   UOM { -> MATCHEDTEXT(unitOfMeasure), CREATE(SizeThreeDimensional, 1, 6,
       "maxDim" = dimensionMaximum,
       "dimOne" = dimensionOne,
       "dimTwo" = dimensionTwo,
       "dimThree" = dimensionThree,
       "uom" = unitOfMeasure)};
}

BLOCK(MaximumSizeCalculator) SizeThreeDimensional{} {
    SizeThreeDimensional.dimOne > SizeThreeDimensional.maxDim 
               { 
               -> 
                  SizeThreeDimensional.maxDim = SizeThreeDimensional.dimOne};
    SizeThreeDimensional.dimTwo > SizeThreeDimensional.maxDim 
               { 
               -> 
                  SizeThreeDimensional.maxDim = SizeThreeDimensional.dimTwo};
    SizeThreeDimensional.dimThree > SizeThreeDimensional.maxDim 
               { 
               -> 
                  SizeThreeDimensional.maxDim = SizeThreeDimensional.dimThree};     
}


//  CAP{REGEXP("MICROSCOPIC")} COLON {-PARTOF(SectionHeader) -> MARK(SectionHeader, 1,2)};