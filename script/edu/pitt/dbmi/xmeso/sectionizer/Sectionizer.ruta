PACKAGE edu.pitt.dbmi.xmeso.sectionizer;

SCRIPT edu.pitt.dbmi.xmeso.model.Model;
SCRIPT edu.pitt.dbmi.xmeso.utilities.Utilities;

//
// Section Header Discovery
// 
WORDTABLE sectionHeadersPassOne = 'sectionizer/section_headers_pass_one.csv';
WORDTABLE sectionHeadersPassTwo = 'sectionizer/section_headers_pass_two.csv';
BLOCK(SectionHeaderDetector) Document{} {
     Document{->MARKTABLE(SectionHeader, 1,
         sectionHeadersPassOne, true, 100, "", 1, "name" = 2, "level" = 3)};
     Document{->MARKTABLE(SubsumableSectionHeader, 1,
              sectionHeadersPassTwo, true, 100, "", 1, "name" = 2, "level" = 3)};
     SubsumableSectionHeader{-PARTOF(SectionHeader)-> TRANSFER(SectionHeader), 
                              UNMARK(SubsumableSectionHeader)};
     SubsumableSectionHeader{PARTOF(SectionHeader)->
                              UNMARK(SubsumableSectionHeader)};
     SectionHeader{-> SHIFT(SectionHeader,1,2)} COLON{-PARTOF(SectionHeader)};  
}

BLOCK(SectionHeaderFilter) Document{->ADDRETAINTYPE(BREAK,SectionHeader)} {
    ANY{-PARTOF(BREAK)} @SectionHeader {-> UNMARK(SectionHeader)};
}
BLOCK(SynopticCategoryFilter) Document{->ADDRETAINTYPE(BREAK,SynopticCategory)} {
     ANY{-PARTOF(BREAK)}  @SynopticCategory {-> UNMARK(SynopticCategory)};
}

//
// Synoptic Report Question Discovery
// 
WORDTABLE synopticsTable = 'synoptics/synoptic_categories.csv';
BLOCK(SynopticDetector) Document{} {
     Document{->MARKTABLE(SynopticCategory, 1,
         synopticsTable, true, 10, "-()", 10, "name" = 2)};
     SynopticCategory  {-> SHIFT(SynopticCategory,1,2)} COLON{-PARTOF(SynopticCategory)};
}

// End of Document and End of Section
BLOCK(EndOfDocumentDetector) Document{} {
    Document{->MARKLAST(EndOfDocument)};
    SPECIAL {REGEXP("\\$"), PARTOF(EndOfDocument) -> UNMARK(SPECIAL)};
}

BLOCK(EndOfSectionDetector) Document{->ADDRETAINTYPE(BREAK)} {
   BREAK @SectionHeader { -> 
//                            LOG("Marking EndOfSection"),
                            MARK(EndOfSection, 1)};
   EndOfSection { -AFTER(SectionHeader) -> 
//                            LOG("UnMarking EndOfSection"),
                            UNMARK(EndOfSection)};
}

BLOCK(SectionDetector) Document{} {
   STRING cachedSectionName;
   INT cachedSectionLevel;
   SectionHeader{->  GETFEATURE("name", cachedSectionName),
                     GETFEATURE("level", cachedSectionLevel)
   } 
   (ANY|FloatNum|UOM|XmesoSize|BREAK)+? {-PARTOF(Section)}
   (EndOfSection | EndOfDocument) 
      { -> 
//      LOG("Creating section " + cachedSectionName),
      CREATE(Section, 2, 3, "name" = cachedSectionName, "level" = cachedSectionLevel)};
}

BLOCK(PartHeaderAnnotator) Document{} {
    INT currentPartNumber = 0;
    Document {-> RETAINTYPE(BREAK)};
    BREAK 
    W{REGEXP("PARTS?|Parts?") -> MARK(PartIndicator)}
    NUM {PARSE(currentPartNumber),
         -PARTOF(PartHeader) -> CREATE(PartHeader, 2, 3, 
             "sectionName" = "UNASSIGNED",
             "sectionLevel" = -1,
             "partNumber" = currentPartNumber)};
    PartHeader  {-> SHIFT(PartHeader,1,2)} COLON{-PARTOF(PartHeader)};
}

BLOCK(PartHeaderSectionNameAssigner) Document {} {
    STRING cachedSectionNameVar;
    INT cachedSectionLevelVar;
    Section{ -> 
                GETFEATURE("name", cachedSectionNameVar),
                GETFEATURE("level", cachedSectionLevelVar)
//                ,
//                LOG("Cached variables from section")
                };
    PartHeader { PartHeader.sectionName=="UNASSIGNED",
                 PartHeader.sectionLevel==-1,
                 PARTOF(Section) ->  
                 SETFEATURE("sectionName", cachedSectionNameVar),
                 SETFEATURE("sectionLevel", cachedSectionLevelVar)            
             };
}

BLOCK(PartDetector) Document{} {
    STRING sectionNameVar;
    INT partLevelVar;
    INT partNumVar;  
    PartHeader {->  
//                    LOG("PartDetector has PartHeader"),
                    GETFEATURE("sectionName", sectionNameVar),
                    GETFEATURE("sectionLevel", partLevelVar),
                    GETFEATURE("partNumber", partNumVar)} 
    ((ANY|FloatNum|XmesoSize|UOM){-PARTOF(Part)->LOG("Token for part discovered.")})+?                
//    ((CW|SW|CAP|NUM|PERIOD|COLON|COMMA|SPECIAL|FloatNum|XmesoSize|UOM|BREAK){-PARTOF(Part)})+?
    (PartHeader | EndOfSection | EndOfDocument) 
       {->
//          LOG("Part delimeter discovered"), 
          CREATE(Part, 2, 2,
           "sectionName" = sectionNameVar,
           "sectionLevel" = partLevelVar,
           "partNumber" = partNumVar)};
}

BLOCK(PartTrimmer) Part{->ADDRETAINTYPE(BREAK,SPACE)} {
 Part{-> TRIM(BREAK,SPACE)};
}
